# When done, submit this entire file to the autograder.

# Part 1

def sum arr
  total = 0
  arr.each do |plus|
  total = total + plus
  return total
end

def max_2_sum arr
  var1 = 0
  var2 = 0
  arr.each do |largest|
  if largest > var1
	var1 = largest
  arr -= [var1]
  arr.each do |el|
  if el > var2
        var2 = el
  # save to a new variable and repeat
  return var1+var2
end

def sum_to_n? arr, n
  arr.each do |item|
  var1 = n - item
  var2 = x - [item]
   if var2.include? var1
    return true
  end
end

# Part 2

def hello(name)
  var1 = 'Hello' + name
  return var
end

def starts_with_consonant?(s)
  if/(\A[aeiou])|(\A\d)|(\A\W)/i.match(s)
   return false
  else
   return true
end

def binary_multiple_of_4?(s)
  # YOUR CODE HERE
  if /[a-z]/.match(s)
    return false
  if /00\Z/.match(s)
   return true
 end
end

# Part 3

class BookInStock
# YOUR CODE HERE
	def initialize(isbn,price)
	  if isbn.empty?
		raise ArgumentError, 'ISBN is empty'
	  elsif
	    @book_isbn = isbn
	    @book_price = price
	  end
	end
	def price_as_string
	  puts '$%0.2f'%[@book_price]
	end
	# setters
	def retail = (value)
	  @book_price = value
	end
	def ISBN = (value)
	  @book_isbn = value
	end
	
	# getters
	def asking_price
	  @book_price
	end
	def getISBN
	  @book_isbn
	end
end
